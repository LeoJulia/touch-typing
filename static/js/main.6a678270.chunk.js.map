{"version":3,"sources":["img/klava.png","redux/selectors/typingText.ts","redux/actions/typingText.ts","redux/consts/actions.ts","pages/TouchTypingPage/components/Results.tsx","pages/TouchTypingPage/components/Timer.tsx","pages/TouchTypingPage/TouchTypingPage.tsx","containers/App.tsx","components/Avatar.tsx","components/TextField.tsx","components/TextInput.tsx","components/icons/Icon.styles.tsx","components/icons/InfoIcon.tsx","components/icons/HelpIcon.tsx","components/icons/CloseIcon.tsx","components/Modal/Modal.styles.tsx","components/Modal/Modal.tsx","containers/StartTypingContainer.styles.tsx","components/Modal/content.ts","containers/StartTypingContainer.tsx","redux/actions/textConfig.ts","redux/selectors/textConfig.ts","containers/TouchTyping.tsx","redux/reducers/typingText.ts","redux/reducers/textConfig.ts","redux/reducers/index.ts","utils/serviceWorker.ts","index.tsx"],"names":["module","exports","getActiveText","typingText","activeText","getTimerData","isTimer","getStartTime","startTime","getEndTime","endTime","startRace","time","type","restartRace","Results","seconds","speed","symbolCount","millis","minutes","Math","floor","toFixed","msToMinutesAndSeconds","round","TimerContainer","styled","div","Timer","props","timerID","state","value","this","setInterval","tick","clearInterval","setState","onEnd","Date","now","Component","Button","button","mapDispatchToProps","TouchTypingPage","connect","text","StartTypingContainer","TouchTyping","length","onClick","StyledApp","App","AvatarImg","img","Avatar","defaultProps","StyledTextField","TextField","StyledTextInput","input","TextInput","onInput","target","isFinish","setRef","maxLength","onChange","disabled","ref","Icon","svg","color","width","height","InfoIcon","d","fill","HelpIcon","CloseIcon","Header","Content","ModalWindow","onClose","isOpen","content","onRequestClose","style","overlay","top","left","right","bottom","border","title","map","item","src","alt","InfoBlock","Container","TextContainer","Text","Title","Error","Info","Help","keyboard","startTimer","changeLang","langCode","fetchTexts","dispatch","fetch","then","res","json","error","console","texts","receiveTexts","StartTyping","openModal","modal","isOpenModal","closeModal","info","help","key","_id","slice","textConfig","BeforeFocus","span","Focus","isError","setFinish","TouchTypingClass","onClear","keyCode","typeFocusText","indexOf","onTyping","afterFocusText","split","newAfterFocusText","newBeforeFocusText","newTypeFocusText","shift","prevState","beforeFocusText","isSuccessInput","document","addEventListener","focus","removeEventListener","textElement","join","el","defaultStore","selectedLang","isFetching","selectedText","reducer","combineReducers","store","action","Boolean","window","location","hostname","match","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6a678270.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/klava.85bad9c9.png\";","export const getActiveText = ({ typingText }) => (typingText ? typingText.activeText : '');\nexport const getTimerData = ({ typingText }) => (typingText ? typingText.isTimer : false);\nexport const getStartTime = ({ typingText }) => (typingText ? typingText.startTime : null);\nexport const getEndTime = ({ typingText }) => (typingText ? typingText.endTime : null);\n","import { RESTART_RACE, FINISH, START_TIMER, START_RACE } from '../consts';\n\nexport interface ActionCreator {\n  type: string;\n  time?: number;\n  text?: string;\n}\n\nexport const setFinish = (time: number): ActionCreator => ({\n  type: FINISH,\n  time,\n});\n\nexport const startRace = (time: number): ActionCreator => ({\n  type: START_RACE,\n  time,\n});\n\nexport const startTimer = (text): ActionCreator => ({\n  type: START_TIMER,\n  text,\n});\n\nexport const restartRace = (): ActionCreator => ({\n  type: RESTART_RACE,\n});\n","export const FINISH = 'FINISH';\nexport const START_TIMER = 'START_TIMER';\nexport const START_RACE = 'START_RACE';\nexport const RESTART_RACE = 'RESTART_RACE';\nexport const CHANGE_LANG = 'CHANGE_LANG';\nexport const REQUEST_TEXTS = 'REQUEST_TEXTS';\nexport const RECEIVE_TEXTS = 'RECEIVE_TEXTS';\n","import React from 'react';\n\nfunction msToMinutesAndSeconds(millis) {\n  const minutes = Math.floor(millis / 60000);\n  const seconds = +((millis % 60000) / 1000).toFixed(0);\n  return `${minutes} : ${seconds < 10 ? '0' : ''}${seconds}`;\n}\n\nexport const Results = ({ startTime, endTime, symbolCount }) => {\n  const seconds = endTime - startTime;\n  const speed = symbolCount / (seconds / 60000);\n\n  return (\n    <>\n      <span>{`Время прохождения: ${msToMinutesAndSeconds(seconds)}`}</span>\n      <span>{`Скорость: ${Math.round(speed)} зн/мин`}</span>\n    </>\n  );\n};\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst TimerContainer = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: var(--grayTransparent);\n\n  & span {\n    display: block;\n    color: var(--white);\n    font-size: 150px;\n  }\n`;\n\ninterface TimerState {\n  value: number;\n}\n\nexport class Timer extends Component<any, TimerState> {\n  private timerID;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 3,\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => {\n      const { value } = this.state;\n      if (value !== -1) {\n        this.tick();\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState(\n      ({ value }) => ({\n        value: --value,\n      }),\n      () => {\n        const { value } = this.state;\n        const { onEnd } = this.props;\n\n        if (value === -1) {\n          onEnd(Date.now());\n        }\n      },\n    );\n  }\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <TimerContainer>\n        <span>{value}</span>\n      </TimerContainer>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { StartTypingContainer, TouchTyping } from '../../containers';\nimport { getStartTime, getEndTime, getActiveText, getTimerData } from '../../redux/selectors';\nimport { startRace, restartRace, ActionCreator } from '../../redux/actions';\nimport { Results, Timer } from './components';\n\nconst Button = styled.button`\n  margin-top: 15px;\n  border-radius: 10px;\n  border: 1px dashed var(--white);\n  padding: 5px;\n  width: 100px;\n  text-align: center;\n  background-color: transparent;\n  color: var(--white);\n  outline: none;\n\n  &:hover {\n    cursor: pointer;\n    background-color: var(--red);\n  }\n`;\n\nconst mapStateToProps = (state) => ({\n  startTime: getStartTime(state),\n  endTime: getEndTime(state),\n  text: getActiveText(state),\n  isTimer: getTimerData(state),\n});\n\nconst mapDispatchToProps = {\n  startRace,\n  restartRace,\n};\n\ninterface TouchTypingPageImplProps {\n  startTime: number;\n  endTime: number;\n  text: string;\n  isTimer: boolean;\n  startRace(time: number): ActionCreator;\n  restartRace(): ActionCreator;\n}\n\nconst TouchTypingPageImpl = ({\n  startTime,\n  endTime,\n  text,\n  isTimer,\n  startRace,\n  restartRace,\n}: TouchTypingPageImplProps) => (\n  <>\n    {!startTime && !endTime && <StartTypingContainer />}\n    {isTimer && <Timer onEnd={startRace} />}\n    {startTime && !endTime && <TouchTyping />}\n    {endTime && startTime && (\n      <>\n        <Results startTime={startTime} endTime={endTime} symbolCount={text.length} />\n        <Button onClick={() => restartRace()}>На главную</Button>\n      </>\n    )}\n  </>\n);\n\nexport const TouchTypingPage = connect(mapStateToProps, mapDispatchToProps)(TouchTypingPageImpl);\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { TouchTypingPage } from '../pages';\n\nconst StyledApp = styled.div`\n  background-color: var(--dark);\n  color: var(--white);\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: 16px;\n`;\n\nexport function App() {\n  return (\n    <StyledApp>\n      <TouchTypingPage />\n    </StyledApp>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst AvatarImg = styled.img`\n  background-image: url(${({ img }: { img: any }) => img});\n  width: 50px;\n  height: 50px;\n  border: 1px dashed var(--white);\n  border-radius: 50%;\n`;\n\nexport const Avatar = ({ img }) => <AvatarImg img={img} />;\n\nAvatar.defaultProps = {\n  img: 'https://picsum.photos/50',\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledTextField = styled.div`\n  width: 40%;\n  height: 200px;\n  background-color: var(--gray);\n  color: var(--dark);\n  padding: 15px;\n  border-radius: 15px;\n  border: 1px dashed var(--blue);\n`;\n\nexport const TextField = ({ text }) => <StyledTextField>{text}</StyledTextField>;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst StyledTextInput = styled.input`\n  margin-top: 15px;\n  width: 40%;\n  padding: 10px;\n  background-color: var(--white);\n  color: var(--dark);\n  border-radius: 15px;\n  border: none;\n  outline: none;\n\n  &:disabled {\n    background-color: var(--darkGray);\n  }\n`;\n\nexport interface TextInputProps {\n  onInput: any;\n  value: any;\n  isFinish: any;\n  setRef: any;\n  maxLength?: any;\n}\n\nexport class TextInput extends Component<TextInputProps> {\n  onInput = ({ target }) => {\n    const { onInput } = this.props;\n    onInput(target.value);\n  };\n\n  render() {\n    const { value, isFinish, setRef, maxLength } = this.props;\n\n    return (\n      <StyledTextInput\n        type=\"text\"\n        onChange={this.onInput}\n        value={value}\n        disabled={isFinish}\n        ref={setRef}\n        maxLength={maxLength}\n      />\n    );\n  }\n}\n\n// TextInput.defaultProps = {\n//   onInput: () => {},\n//   setRef: () => {},\n//   maxLength: 100,\n// };\n","import styled from 'styled-components';\n\nexport const Icon = styled.svg`\n  fill: ${(props) => props.color || 'white'};\n  width: ${(props) => props.width || '24px'};\n  height: ${(props) => props.height || '24px'};\n  opacity: 0.7;\n\n  &:hover {\n    cursor: pointer;\n    opacity: 1;\n  }\n`;\n","import React from 'react';\nimport { Icon } from './Icon.styles';\n\nexport const InfoIcon = (props: any) => (\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  <Icon {...props}>\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n    <path d=\"M11 7h2v2h-2zm0 4h2v6h-2zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\n  </Icon>\n);\n","import React from 'react';\nimport { Icon } from './Icon.styles';\n\nexport const HelpIcon = (props: any) => (\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  <Icon {...props}>\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n    <path d=\"M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z\" />\n  </Icon>\n);\n","import React from 'react';\nimport { Icon } from './Icon.styles';\n\nexport const CloseIcon = (props: any) => (\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  <Icon {...props}>\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <path d=\"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\n  </Icon>\n);\n","import styled from 'styled-components';\n\nconst Header = styled.div`\n  display: flex;\n  font-size: 2rem;\n  justify-content: space-between;\n  align-items: center;\n  color: var(--blue);\n`;\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0 30px;\n  margin-top: 20px;\n  text-align: justify;\n\n  & div {\n    margin-bottom: 10px;\n  }\n\n  & img {\n    margin: 30px 0;\n    align-self: center;\n  }\n`;\n\nexport { Header, Content };\n","import React from 'react';\nimport Modal from 'react-modal';\nimport { CloseIcon } from '../index';\nimport { Header, Content } from './Modal.styles';\n\nexport const ModalWindow = ({ onClose, isOpen, content }: any) => (\n  <Modal\n    isOpen={isOpen}\n    onRequestClose={onClose}\n    style={{\n      overlay: {\n        'background-color': 'var(--grayTransparent)',\n      },\n      content: {\n        top: '20%',\n        left: '20%',\n        right: '20%',\n        bottom: 'auto',\n        border: '1px dashed var(--dark)',\n        'border-radius': '10px',\n        'background-color': '#ebebeb',\n      },\n    }}\n  >\n    <Header>\n      {content.title}\n      <CloseIcon color=\"var(--dark)\" onClick={onClose} />\n    </Header>\n    <Content>\n      {content.content.map((item) => (\n        <div>{item}</div>\n      ))}\n      {content.img && <img src={content.img} alt=\"keyboard\" />}\n    </Content>\n  </Modal>\n);\n","import styled from 'styled-components';\n\nconst Button = styled.button`\n  border-radius: 10px;\n  margin-left: 10px;\n  border: 1px dashed var(--white);\n  padding: 5px;\n  width: 100px;\n  background-color: transparent;\n  color: var(--white);\n  outline: none;\n\n  &:hover {\n    cursor: pointer;\n    background-color: var(--red);\n  }\n`;\n\nconst InfoBlock = styled.div`\n  display: flex;\n  position: absolute;\n  left: 125px;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  position: relative;\n  align-items: flex-end;\n  margin-bottom: 15px;\n`;\n\nconst TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Text = styled.div`\n  display: flex;\n  padding: 5px;\n`;\n\nconst Title = styled.div`\n  flex-grow: 3;\n`;\n\nconst Error = styled.div`\n  font-size: 20px;\n`;\n\nexport { Button, TextContainer, Text, Title, Error, Container, InfoBlock };\n","import keyboard from '../../img/klava.png';\n\nconst Info = {\n  title: 'Информация о проекте',\n  content: [\n    'Название: \"Тренажер печати\"',\n    'Разработчик: студентка группы П-41 Леонтьева Юлия',\n    'Руководитель дипломного проекта: Акимов Петр Александрович',\n  ],\n};\n\nconst Help = {\n  title: 'Полезная информация',\n  content: [\n    'Слепая печать -  методика набора текста «вслепую», то есть не глядя на клавиши печатной машинки или клавиши клавиатуры, используя все (или большинство) пальцы рук.',\n    'Освоение этого метода позволяет значительно увеличить скорость печати. Для наиболее эффективного результата необходимо соблюдать осанку, что позволит вам избавиться от сутулости. Монитор должен находиться на оптимальном расстояние от глаз (60 см). Так же уменьшается психическая утомляемость, так как затрачивается меньше умственных усилий на набор текста и происходит уменьшение выполнения необходимой работы, меньше ошибок и связанного с этим раздражения. Ваша производительности значительно вырастит, что позволит более эффективно выполнять большее количество задач.',\n    'Для обучения данного метода необходимо запомнить расположение клавиш на клавиатуре. В процессе набора текста старайтесь не смотреть на клавиатуру, старайтесь вспомнить где расположена клавиша.',\n    'Данный тренажер подскажет вам, что совершена ошибка, и не позволит набирать текста дальше, пока ошибка не будет исправлена.',\n  ],\n  img: keyboard,\n};\n\nexport { Info, Help };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { startTimer, changeLang, fetchTexts, ActionCreator } from '../redux/actions';\nimport { getTexts } from '../redux/selectors';\nimport { Avatar, InfoIcon, HelpIcon, ModalWindow } from '../components';\nimport {\n  Button,\n  TextContainer,\n  Text,\n  Title,\n  Error,\n  Container,\n  InfoBlock,\n} from './StartTypingContainer.styles';\nimport { Info, Help } from '../components/Modal/content';\n\nconst mapDispatchToProps = {\n  startTimer,\n  changeLang,\n  fetchTexts,\n};\n\nconst mapStateToProps = (state) => ({\n  texts: getTexts(state),\n});\n\ninterface StartTypingProps {\n  startTimer(text: string): ActionCreator;\n  fetchTexts();\n  texts: any;\n}\n\ninterface StartTypingState {\n  isOpenModal: any;\n}\n\nclass StartTyping extends Component<StartTypingProps, StartTypingState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpenModal: {\n        info: false,\n        help: false,\n      },\n    };\n  }\n\n  componentDidMount() {\n    const { fetchTexts } = this.props;\n\n    fetchTexts();\n  }\n\n  openModal = (modal) =>\n    this.setState((props) => ({ isOpenModal: { ...props.isOpenModal, [modal]: true } }));\n\n  closeModal = (modal) =>\n    this.setState((props) => ({ isOpenModal: { ...props.isOpenModal, [modal]: false } }));\n\n  render() {\n    const {\n      isOpenModal: { info, help },\n    } = this.state;\n    const { startTimer, texts } = this.props;\n\n    return (\n      <>\n        <Container>\n          <Avatar />\n          <InfoBlock>\n            <HelpIcon onClick={() => this.openModal('help')} />\n            <InfoIcon onClick={() => this.openModal('info')} />\n          </InfoBlock>\n        </Container>\n        <TextContainer>\n          {texts.length ? (\n            texts.map((text) => (\n              // eslint-disable-next-line no-underscore-dangle\n              <Text key={text._id}>\n                <Title>{text.title}</Title>\n                <Button onClick={() => startTimer(text.text.slice(0, 100))}>Старт</Button>\n              </Text>\n            ))\n          ) : (\n            <Error>Упс... Что-то пошло не так. Попробуйте перезагрузить страницу.</Error>\n          )}\n        </TextContainer>\n        <ModalWindow content={Help} isOpen={help} onClose={() => this.closeModal('help')} />\n        <ModalWindow content={Info} isOpen={info} onClose={() => this.closeModal('info')} />\n      </>\n    );\n  }\n}\n\nexport const StartTypingContainer = connect(mapStateToProps, mapDispatchToProps)(StartTyping);\n","import { CHANGE_LANG, REQUEST_TEXTS, RECEIVE_TEXTS } from '../consts';\n\nexport interface TextConfigCreator {\n  type: string;\n  langCode?: string;\n  texts?: string[];\n}\n\nexport const changeLang = (langCode: string): TextConfigCreator => ({\n  type: CHANGE_LANG,\n  langCode,\n});\n\nexport const requestTexts = (): TextConfigCreator => ({\n  type: REQUEST_TEXTS,\n});\n\nexport const receiveTexts = (json): TextConfigCreator => ({\n  type: RECEIVE_TEXTS,\n  texts: json,\n});\n\nexport const fetchTexts = () => {\n  return (dispatch) => {\n    dispatch(requestTexts());\n\n    return fetch('https://glacial-earth-88103.herokuapp.com/training')\n      .then(\n        (res) => res.json(),\n        (error) => console.error('An error occurred.', error),\n      )\n      .then((json) => dispatch(receiveTexts(json)));\n  };\n};\n","export const getActiveLangCode = ({ textConfig }) => textConfig.langCode;\n\nexport const getTexts = ({ textConfig }) => textConfig.texts;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\n\nimport { getActiveText, getStartTime, getEndTime } from '../redux/selectors';\nimport { setFinish, startRace, restartRace } from '../redux/actions';\nimport { TextField, TextInput } from '../components';\n\nconst BeforeFocus = styled.span`\n  color: var(--darkGray);\n`;\n\ninterface FocusProps {\n  isError?: any;\n}\n\nconst Focus = styled.span<FocusProps>`\n  color: ${({ isError }) => (isError ? 'var(--red)' : 'var(--blue)')};\n  text-decoration: underline;\n`;\n\nconst mapStateToProps = (state) => ({\n  text: getActiveText(state),\n  startTime: getStartTime(state),\n  endTime: getEndTime(state),\n});\n\nconst Button = styled.button`\n  margin-top: 15px;\n  border-radius: 10px;\n  border: 1px dashed var(--white);\n  padding: 5px;\n  width: 100px;\n  text-align: center;\n  background-color: transparent;\n  color: var(--white);\n  outline: none;\n\n  &:hover {\n    cursor: pointer;\n    background-color: var(--red);\n  }\n`;\n\nconst mapDispatchToProps = { setFinish, startRace, restartRace };\n\ninterface TouchTypingProps {\n  text;\n  startTime;\n  setFinish;\n  endTime;\n  restartRace;\n}\n\ninterface TouchTypingState {\n  typeFocusText;\n  typingText;\n  isError;\n  beforeFocusText;\n  afterFocusText;\n  isSuccessInput;\n}\n\nclass TouchTypingClass extends Component<TouchTypingProps, TouchTypingState> {\n  private input: any;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      typingText: '',\n      isError: false,\n      beforeFocusText: [],\n      typeFocusText: '',\n      afterFocusText: [],\n      isSuccessInput: false,\n    };\n\n    this.input = null;\n  }\n\n  componentDidMount() {\n    const { text } = this.props;\n\n    const beforeFocusText = [];\n    const afterFocusText = text.split(' ');\n    const typeFocusText = afterFocusText.shift();\n\n    document.addEventListener('keypress', this.onTyping);\n    document.addEventListener('keyup', this.onClear);\n\n    this.setState({\n      beforeFocusText,\n      typeFocusText,\n      afterFocusText,\n    });\n  }\n\n  componentDidUpdate() {\n    const { startTime } = this.props;\n    if (startTime) {\n      this.input.focus();\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keypress', this.onTyping);\n    document.removeEventListener('keyup', this.onClear);\n  }\n\n  onClear = ({ keyCode }) => {\n    if (keyCode !== 8) return;\n\n    const { typeFocusText, typingText } = this.state;\n\n    if (typeFocusText.indexOf(typingText) !== -1) {\n      this.setState({\n        isError: false,\n      });\n    }\n  };\n\n  onTyping = ({ keyCode, key }) => {\n    const { afterFocusText, typeFocusText, typingText, isError } = this.state;\n\n    if (typeFocusText.split('')[typingText.length] !== key) {\n      this.setState({\n        isError: true,\n      });\n    }\n\n    if (typeFocusText.length === typingText.length && keyCode === 32 && !isError) {\n      const newAfterFocusText = [...afterFocusText];\n      const newBeforeFocusText = typeFocusText;\n      const newTypeFocusText = newAfterFocusText.shift();\n\n      this.setState((prevState) => ({\n        typeFocusText: newTypeFocusText,\n        afterFocusText: newAfterFocusText,\n        beforeFocusText: [...prevState.beforeFocusText, newBeforeFocusText],\n        isError: false,\n        typingText: '',\n        isSuccessInput: true,\n      }));\n    }\n\n    if (\n      afterFocusText.length === 0 &&\n      (key === '.' || key === '!' || key === '?' || key === ' ') &&\n      !isError\n    ) {\n      const { setFinish } = this.props;\n      const newBeforeFocusText = typeFocusText;\n\n      this.setState((prevState) => ({\n        typeFocusText: '',\n        typingText: '',\n        isSuccessInput: true,\n        beforeFocusText: [...prevState.beforeFocusText, newBeforeFocusText],\n        afterFocusText: [],\n      }));\n\n      setFinish(Date.now());\n    }\n  };\n\n  onInput = (value) => {\n    const { isSuccessInput } = this.state;\n\n    if (isSuccessInput) {\n      this.setState({\n        isSuccessInput: false,\n      });\n      return;\n    }\n\n    this.setState({\n      typingText: value,\n    });\n  };\n\n  render() {\n    const { afterFocusText, typeFocusText, beforeFocusText, typingText, isError } = this.state;\n    const { endTime, restartRace } = this.props;\n\n    const textElement = (\n      <span>\n        <BeforeFocus>{`${beforeFocusText.join(' ')} `}</BeforeFocus>\n        <Focus isError={isError}>{typeFocusText}</Focus>\n        {` ${afterFocusText.join(' ')} `}\n      </span>\n    );\n\n    return (\n      <>\n        <TextField text={textElement} />\n        <TextInput\n          value={typingText}\n          isFinish={!!endTime}\n          onInput={this.onInput}\n          setRef={(el) => {\n            this.input = el;\n          }}\n        />\n        <Button onClick={() => restartRace()}>На главную</Button>\n      </>\n    );\n  }\n}\n\nexport const TouchTyping = connect(mapStateToProps, mapDispatchToProps)(TouchTypingClass);\n","import { FINISH, START_TIMER, START_RACE, RESTART_RACE } from '../consts';\nimport { ActionCreator } from '../actions';\n\nexport interface ITypingText {\n  isTimer: boolean;\n  activeText?: string;\n  startTime?: number;\n  endTime?: number;\n}\n\ninterface IActionTypingText extends ActionCreator {}\n\nconst defaultStore: ITypingText = {\n  activeText: '',\n  isTimer: false,\n};\n\nexport const typingText = (store = defaultStore, action: IActionTypingText) => {\n  switch (action.type) {\n    case FINISH:\n      return { ...store, endTime: action.time };\n    case START_TIMER:\n      return {\n        ...store,\n        isTimer: true,\n        activeText: action.text,\n      };\n    case START_RACE:\n      return {\n        ...store,\n        isTimer: false,\n        startTime: action.time,\n      };\n    case RESTART_RACE:\n      return {\n        ...defaultStore,\n      };\n    default:\n      return store;\n  }\n};\n","import { CHANGE_LANG, REQUEST_TEXTS, RECEIVE_TEXTS } from '../consts';\n\nconst defaultStore = {\n  selectedLang: 'en',\n  isFetching: false,\n  texts: [],\n  selectedText: null,\n};\n\nexport const textConfig = (store = defaultStore, action) => {\n  switch (action.type) {\n    case CHANGE_LANG:\n      return { ...store, selectedLang: action.langCode };\n    case REQUEST_TEXTS:\n      return { ...store, isFetching: true };\n    case RECEIVE_TEXTS:\n      return { ...store, isFetching: false, texts: action.texts };\n    default:\n      return store;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport { typingText } from './typingText';\nimport { textConfig } from './textConfig';\n\nexport const reducer = combineReducers({ typingText, textConfig });\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\n\nimport { App } from './containers';\nimport { reducer } from './redux/reducers';\n\nimport * as serviceWorker from './utils/serviceWorker';\nimport './index.scss';\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunkMiddleware)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}